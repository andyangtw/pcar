#!/usr/bin/env python

PACKAGE = 'hector_mapping'

from math import pi
from dynamic_reconfigure.parameter_generator_catkin import ParameterGenerator, int_t, double_t, str_t, bool_t

gen = ParameterGenerator()

#gen.add("map_resolution", double_t, 0, "map_resolution", 0.025, 0, 0.5)
#gen.add("map_size", int_t, 0, "map_size", 1024, 0, 2048)
#gen.add("map_start_x", double_t, 0, "map_start_x", 0.5, 0, 1.0)
#gen.add("map_start_y", double_t, 0, "map_start_y", 0.5, 0, 1.0)
#gen.add("map_multi_res_levels", int_t, 0, "map_multi_res_levels", 3, 0, 10)
gen.add("update_factor_free", double_t, 0, "update_factor_free", 0.4, 0, 1.0)
gen.add("update_factor_occupied", double_t, 0, "update_factor_occupied", 0.9, 0, 1.0)
gen.add("map_update_distance_thresh", double_t, 0, "map_update_distance_thresh", 0.4, 0, 1.0)
gen.add("map_update_angle_thresh", double_t, 0, "map_update_angle_thresh", 0.9, 0, 1.0)
#gen.add("laser_z_min_value", double_t, 0, "laser_z_min_value", -1.0, 0, -5.0)
#gen.add("laser_z_max_value", double_t, 0, "laser_z_max_value", 1.0, 0, 5.0)
#gen.add("laser_max_dist", double_t, 0, "laser_max_dist", 30.0, 0, 50.0)
#gen.add("map_pub_period", double_t, 0, "map_pub_period", 2.0, 0, 20.0)


gen.add("restore_defaults", bool_t, 0, "Restore to the original configuration", False)

exit(gen.generate(PACKAGE, "hector_slam", "Hector_mapping"))
